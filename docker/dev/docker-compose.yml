# docker/dev/docker-compose.yml

version: '3.8'

services:
  server:
    build:
      context: ../../backend/python
      dockerfile: ../../docker/dev/Dockerfile
    ports:
      - "50051:50051"
      - "8080:8080"
    volumes:
      - ../../backend/python:/app
      - ../../backend/secrets:/app/secrets
      - ../../frontend:/usr/share/nginx/html/frontend
    environment:
      - PYTHONUNBUFFERED=1
      - DB_HOST=mysql
      - DB_NAME=vrdb01
      - DB_USER=db_user
      - DB_PASSWORD=db_pass
      - DB_ENV=dev
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    build: 
      context: ../../mysql
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: db_pass
      MYSQL_DATABASE: vrdb01
      MYSQL_USER: db_user
      MYSQL_PASSWORD: db_pass
      TZ: Asia/Tokyo
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --bind-address=0.0.0.0
    ports:
      - "3307:3306"
    volumes:
      - ../../mysql/data:/var/lib/mysql
      - ../../mysql/init:/docker-entrypoint-initdb.d
      - ../../mysql/conf.d:/etc/mysql/conf.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ../../frontend:/usr/share/nginx/html/frontend
      - ../../nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server